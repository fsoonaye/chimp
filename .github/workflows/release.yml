name: Release Chess Engine

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Allow fetching tags

      - name: Install Dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y clang

      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install llvm make -y

      - name: Determine Version and EXE name
        id: vars
        shell: bash
        run: |
          # Get architecture
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            ARCH="x64"
          elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
            ARCH="arm64"
          fi

          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            echo "Trigger: tag, VERSION=$VERSION"
          else
            VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
            VERSION="${VERSION#v}"
            echo "Trigger: manual, VERSION=$VERSION"
          fi
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)

          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            EXE_NAME="chimp-${MAJOR_MINOR}-windows-${ARCH}.exe"
          else
            EXE_NAME="chimp-${MAJOR_MINOR}-linux-${ARCH}"
          fi

          echo "EXE_NAME=${EXE_NAME}" >> $GITHUB_ENV
          echo "UPLOAD_NAME=${EXE_NAME}" >> $GITHUB_OUTPUT
          echo "MAJOR_MINOR=${MAJOR_MINOR}" >> $GITHUB_OUTPUT

      - name: Build Chess Engine (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          CXX=clang++ make EXE="$EXE_NAME"

      - name: Build Chess Engine (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          CXX=clang++ make EXE="$EXE_NAME"
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.UPLOAD_NAME }}
          path: ${{ env.EXE_NAME }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: chimp-*/*
          tag_name: ${{ github.ref_name }}
          body: "Chess Engine ${{ github.ref_name }} release."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
