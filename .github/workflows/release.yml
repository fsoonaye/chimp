name: Release Chess Engine
on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install clang
        run: |
          sudo apt update
          sudo apt install -y clang
      
      - name: Get Version from Tag
        id: get_version
        shell: bash
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_OUTPUT
      
      - name: Get Architecture
        id: get_arch
        shell: bash
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            ARCH="x64"
          elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
            ARCH="arm64"
          fi
          echo "ARCH=$ARCH" >> $GITHUB_OUTPUT
      
      - name: Build Chess Engine
        run: |
          CXX=clang++ make EXE=chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-linux-${{ steps.get_arch.outputs.ARCH }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-linux-${{ steps.get_arch.outputs.ARCH }}
          path: chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-linux-${{ steps.get_arch.outputs.ARCH }}
          if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Get Version from Tag
        id: get_version
        shell: bash
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_OUTPUT
      
      - name: Get Architecture
        id: get_arch
        shell: bash
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            ARCH="x64"
          elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
            ARCH="arm64"
          fi
          echo "ARCH=$ARCH" >> $GITHUB_OUTPUT
      
      - name: Build Chess Engine
        run: |
          CXX=clang++ make EXE=chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-darwin-${{ steps.get_arch.outputs.ARCH }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-darwin-${{ steps.get_arch.outputs.ARCH }}
          path: chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-darwin-${{ steps.get_arch.outputs.ARCH }}
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup MinGW
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-clang make git
      
      - name: Get Version from Tag
        id: get_version
        shell: bash
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_OUTPUT
      
      - name: Get Architecture
        id: get_arch
        shell: bash
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            ARCH="x64"
          elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
            ARCH="arm64"
          fi
          echo "ARCH=$ARCH" >> $GITHUB_OUTPUT
      
      - name: Build Chess Engine
        shell: msys2 {0}
        run: |
          CXX=clang++ make EXE=chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-windows-${{ steps.get_arch.outputs.ARCH }}.exe
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-windows-${{ steps.get_arch.outputs.ARCH }}
          path: chimp-${{ steps.get_version.outputs.MAJOR_MINOR }}-windows-${{ steps.get_arch.outputs.ARCH }}.exe
          if-no-files-found: error

  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: chimp-*/*
          tag_name: ${{ github.ref_name }}
          body: "Chess Engine ${{ github.ref_name }} release."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
